#pragma version 8
intcblock 0 1 32 10
bytecblock 0x 0x6d2d 0x682d
txn NumAppArgs
intc_0 // 0
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x20f4f096 // "mint((string,uint64,string),uint64,pay)uint64"
==
bnz main_l5
txna ApplicationArgs 0
pushbytes 0x579096e3 // "buy(asset,account,uint64,uint64,pay,axfer)void"
==
bnz main_l4
err
main_l4:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub buycaster_5
intc_1 // 1
return
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub mintcaster_4
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l8
err
main_l8:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
retsub

// mint
mint_1:
proto 3 1
intc_0 // 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
global CurrentApplicationAddress
acct_params_get AcctMinBalance
store 1
store 0
global CurrentApplicationAddress
frame_bury 2
frame_dig 2
len
intc_2 // 32
==
assert
frame_dig 2
frame_dig -2
itob
concat
frame_bury 1
bytec_1 // "m-"
frame_dig 1
concat
box_len
store 3
store 2
load 3
intc_0 // 0
==
assert
bytec_1 // "m-"
frame_dig 1
concat
box_del
pop
bytec_1 // "m-"
frame_dig 1
concat
frame_dig -3
box_put
frame_dig -3
frame_dig -3
intc_0 // 0
extract_uint16
frame_dig -3
intc_3 // 10
extract_uint16
substring3
frame_bury 3
frame_dig -3
pushint 2 // 2
extract_uint64
frame_bury 4
frame_dig -3
frame_dig -3
intc_3 // 10
extract_uint16
dig 1
len
substring3
frame_bury 5
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
frame_dig 3
extract 2 0
itxn_field ConfigAssetName
pushbytes 0x544e4654 // "TNFT"
itxn_field ConfigAssetUnitName
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
frame_dig 5
extract 2 0
itxn_field ConfigAssetURL
frame_dig 4
itxn_field ConfigAssetTotal
intc_0 // 0
itxn_field Fee
itxn_submit
global CurrentApplicationAddress
acct_params_get AcctMinBalance
store 5
store 4
frame_dig -1
gtxns Amount
load 4
load 0
-
>=
assert
itxn CreatedAssetID
frame_bury 0
retsub

// pay
pay_2:
proto 2 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// buy
buy_3:
proto 6 0
bytec_0 // ""
dup
intc_0 // 0
dupn 2
bytec_0 // ""
dup
txn Sender
frame_bury 1
frame_dig 1
len
intc_2 // 32
==
assert
frame_dig 1
frame_dig -4
itob
concat
frame_bury 0
bytec_2 // "h-"
frame_dig 0
concat
box_len
store 7
store 6
load 7
intc_0 // 0
==
assert
frame_dig -2
gtxns Sender
txn Sender
==
assert
frame_dig -2
gtxns Receiver
global CurrentApplicationAddress
==
assert
frame_dig -5
txnas Accounts
frame_dig -3
callsub pay_2
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
txn Sender
itxn_field AssetReceiver
frame_dig -6
txnas Assets
itxn_field XferAsset
intc_1 // 1
itxn_field AssetAmount
itxn_submit
intc_1 // 1
frame_bury 2
bytec_2 // "h-"
frame_dig 0
concat
box_del
pop
bytec_2 // "h-"
frame_dig 0
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig 2
setbit
box_put
retsub

// mint_caster
mintcaster_4:
proto 0 0
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
btoi
frame_bury 2
txn GroupIndex
intc_1 // 1
-
frame_bury 3
frame_dig 3
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
callsub mint_1
frame_bury 0
pushbytes 0x151f7c75 // 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// buy_caster
buycaster_5:
proto 0 0
intc_0 // 0
dupn 5
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
txna ApplicationArgs 2
intc_0 // 0
getbyte
frame_bury 1
txna ApplicationArgs 3
btoi
frame_bury 2
txna ApplicationArgs 4
btoi
frame_bury 3
txn GroupIndex
pushint 2 // 2
-
frame_bury 4
frame_dig 4
gtxns TypeEnum
intc_1 // pay
==
assert
txn GroupIndex
intc_1 // 1
-
frame_bury 5
frame_dig 5
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub buy_3
retsub